docker build -t maksymblinov/init_db:v1 ./
docker push maksymblinov/init_db:v1
rm  ~/.docker/config.json
az aks get-credentials --resource-group aks_tf_test  --name devops-test-aks
mysql -h mysql-wpmaximus.mysql.database.azure.com -u mysqladmin@mysql-wpmaximus -p1-qwerty


kubectl get secrets -n tekton-pipelines
kubectl describe  secrets git-ssh-key -n tekton-pipelines
kubectl delete secrets regsecret  -n tekton-pipelines
kubectl get taskruns
kubectl delete taskrun --all
kubectl delete task --all
kubectl create -f test_taskrun.yaml
kubectl get serviceaccounts
kubectl delete  serviceaccounts pipeline
kubectl apply -f pipelinerun_test.yaml
kubectl create -f pipelinerun_test.yaml
kubectl get secrets

tkn tasks delete --all
tkn hub install task git-clone && tkn hub install task buildah

kubectl create clusterrolebinding pipeline-admin --clusterrole=cluster-admin --serviceaccount=default:pipeline



kubectl apply -f https://storage.googleapis.com/tekton-releases/interceptors/github/latest/release.yaml

apiVersion: triggers.tekton.dev/v1beta1
kind: EventListener
metadata:
  name: git-push-listener
spec:
  triggers:
    - name: git-push-trigger
      serviceAccountName: pipeline
      interceptors:
        - github:
            eventTypes: ["push"]
      bindings:
        - ref: git-push-binding
      template:
        ref : git-push-template



apiVersion: triggers.tekton.dev/v1beta1
kind: EventListener
metadata:
  name: git-push-listener
spec:
  serviceAccountName: pipeline
  triggers:
      - name: github-push-trigger
        interceptors:
          - name: "verify-github-payload"
            ref:
              name: "github"
              kind: ClusterInterceptor
            params:
              - name: secretRef
                value:
                  secretName: "github-trigger-secret"
                  secretKey: "secretToken"
              - name: eventTypes
                value:
                  - "Push Hook"
        bindings:
          - name: gitrevision
            value: $(body.head_commit.id)
          - name: gitrepositoryurl
            value: $(body.repository.url)
        template:
          - name: git-push-template    


                    # - name: "addChangedFiles"
          #   value:
          #     enabled: true
        # - ref:
        #     name: cel
        #   # params:
        #   # - name: filter
        #   #   # execute only when a file within the controllers directory has changed
        #   #   value: extensions.changed_files.matches('controllers/')