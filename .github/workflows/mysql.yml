name: Mysql_Pipeline
on:
  push:
    paths:
      - '.github/workflows/mysql.yml'
    branches:
      - main  
  workflow_dispatch:
env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  KUBECONFIG: ${{ github.workspace }}/terraform-azure/kubeconfig
jobs:
  terraform-CI:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform-azure
      
    steps:
    - name: Clon Rep
      uses: actions/checkout@v3  

    - name: Create Storage
      env:
        SCRIPT_DIR: ${{ github.workspace }}/terraform-azure/scripts
      run: bash  $SCRIPT_DIR/create_storage.sh

    - name: terraform init
      run: terraform init

    - name: terraform plan
      id: plan
      run: terraform plan
      
    - name: terraform apply
      if: "!contains(github.event.head_commit.message, 'destroy')"
      run: terraform apply -auto-approve

    - name: Upload kubeconfig artifact
      uses: actions/upload-artifact@v3
      with:
        name: kubeconfig
        path: terraform-azure/kubeconfig 
      
    - name: Terraform Destroy
      if: contains(github.event.head_commit.message, 'destroy')
      run: terraform destroy -auto-approve

  terraform-CD:
    needs: 
      - terraform-CI
    if: "!contains(github.event.head_commit.message, 'destroy') "
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform-azure

    steps:
    - name: Clon Rep
      uses: actions/checkout@v3

    - name: Setup kubectl
      uses: azure/setup-kubectl@v3

    - name: Download kubeconfig
      uses: actions/download-artifact@v3
      with:
        name: kubeconfig
        path: terraform-azure
    
    - name: Check Deploymeny/Service/Pods Before Deploy
      run: kubectl get service && kubectl get pods && kubectl get  deployment

    - name: Apply Kubernetes manifest
      run: kubectl apply -f mysql.yml

    - name: Wait for 10 seconds()
      run: sleep 10s

    - name: Check Mysql Pods
      run: kubectl exec -it $(kubectl get pod -l "app=mysql" -o jsonpath='{.items[0].metadata.name}')-- mysql -u root -p1234  && show databases;

    - name: Create DB/Tables
      env:
        SCRIPT_DIR: ${{ github.workspace }}/terraform-azure/scripts
      run: bash  $SCRIPT_DIR/mysql.sh

    - name: Check Mysql Pods after Create DB
      run: kubectl exec -it $(kubectl get pod -l "app=mysql" -o jsonpath='{.items[0].metadata.name}')-- mysql -u root -p1234  && show databases;


    - name: Wait for 10 seconds()
      run: sleep 10s

    - name: Delete Mysql
      run: kubectl delete service mysql && kubectl delete pods --selector app=mysql && kubectl delete deployment mysql

    - name: Check Deploymeny/Service/Pods after Delete
      run: kubectl get service && kubectl get pods && kubectl get  deployment

    - name: Apply Kubernetes manifest after Delete
      run: kubectl apply -f mysql.yml

    - name: Wait for 10 seconds()
      run: sleep 10s

    - name: Check Deploymeny/Service/Pods after repeated Deploy
      run: kubectl get service && kubectl get pods && kubectl get  deployment

    - name: Check Mysql Pods
      run: kubectl exec -it $(kubectl get pod -l "app=mysql" -o jsonpath='{.items[0].metadata.name}')-- mysql -u root -p1234  && show databases;





